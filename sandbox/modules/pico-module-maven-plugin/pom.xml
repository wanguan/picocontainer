<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>maven-plugins</artifactId>
		<groupId>org.apache.maven.plugins</groupId>
		<version>24</version>
		<relativePath/>
	</parent>
	<groupId>com.picocontainer.modules</groupId>
	<artifactId>pico-module-maven-plugin</artifactId>
	<version>3.0-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>
	<name>Maven Pico Module Plugin</name>
	<description>Builds a Pico Module Archive (.pico-module) file from the compiled project classes and resources.</description>
	<prerequisites>
		<maven>${mavenVersion}</maven>
	</prerequisites>
	<properties>
		<mavenArchiverVersion>2.5</mavenArchiverVersion>
		<mavenVersion>2.0.6</mavenVersion>
		<jtype-version>0.1.3</jtype-version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${mavenVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>${mavenVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${mavenVersion}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>${mavenVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-archiver</artifactId>
			<version>${mavenArchiverVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-archiver</artifactId>
			<version>2.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-container-default</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-component-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-testing</groupId>
			<artifactId>maven-plugin-testing-harness</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.picocontainer.modules</groupId>
			<artifactId>picocontainer-modules</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.jtype</groupId>
			<artifactId>jtype</artifactId>
			<version>${jtype-version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build 
          itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.6,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-invoker-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>exec</goal>
											<goal>install</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>								
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.1,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>	
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-remote-resources-plugin</artifactId>
										<versionRange>[1.1,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>	
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>integration-tests</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!--
                        The following series of ant tasks build a batch of testable jars to validate deployer execution.
                    -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>
							<!--  Overridden version -->1.7</version>
						<executions>
							<execution>
								<phase>test-compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<!-- Delete the foo classes so we can verify that the VFS classloader is
								indeed working since foo.bar.Zap will exist in each jar 
								-->
										<delete dir="${project.build.directory}/test-classes/foo"/>
										<!-- Build Module Directory Test Deploy As Well -->
										<mkdir dir="${project.build.directory}/test-modules"/>
										<copy todir="${project.build.directory}/test-modules">
											<fileset dir="${project.basedir}/src/test/modules">
												<include name="com.picocontainer.testmodules.*/**"/>
											</fileset>
										</copy>
										<jar destfile="${project.build.directory}/modules/com.picocontainer.testmodules.moduleOne.pico-module">
											<fileset dir="${project.build.directory}/test-modules/com.picocontainer.testmodules.moduleOne"/>
											<fileset dir="${project.build.directory}/test-classes">
												<include name="**/testmodules/moduleOne/**/*"/>
											</fileset>
										</jar>
										<jar destfile="${project.build.directory}/modules/com.picocontainer.testmodules.moduleTwo.pico-module">
											<fileset dir="${project.build.directory}/test-modules/com.picocontainer.testmodules.moduleOne"/>
											<fileset dir="${project.build.directory}/test-classes">
												<include name="**/testmodules/moduleTwo/**/*"/>
											</fileset>
										</jar>
										<!-- Finally Make Local Repo for installing modules into -->
										<mkdir dir="${project.build.directory}/local-repo"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>test-install-module-one</id>
								<phase>test-compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>mvn</executable>
									<arguments>
										<argument>install:install-file</argument>
										<argument>-DgroupId=com.picocontainer.testmodules</argument>
										<argument>-DartifactId=moduleOne</argument>
										<argument>-DgeneratePom=true</argument>
										<argument>-Dversion=1.0-SNAPSHOT</argument>
										<argument>-Dpackaging=pico-module</argument>
										<argument>-DcreateChecksum=true</argument>
										<argument>-DlocalRepositoryPath=${project.build.directory}/local-repo</argument>
										<argument>-Dfile=${project.build.directory}/modules/com.picocontainer.testmodules.moduleOne.pico-module</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>test-install-module-two</id>
								<phase>test-compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>mvn</executable>
									<arguments>
										<argument>install:install-file</argument>
										<argument>-DgroupId=com.picocontainer.testmodules</argument>
										<argument>-DartifactId=moduleTwo</argument>
										<argument>-DgeneratePom=true</argument>
										<argument>-Dversion=1.0-SNAPSHOT</argument>
										<argument>-Dpackaging=pico-module</argument>
										<argument>-DcreateChecksum=true</argument>
										<argument>-DlocalRepositoryPath=${project.build.directory}/local-repo</argument>
										<argument>-Dfile=${project.build.directory}/modules/com.picocontainer.testmodules.moduleTwo.pico-module</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<version>
							<!--  Overridden Version --> 1.8</version>
						<configuration>
							<projectsDirectory>src/it</projectsDirectory>
							<settingsFile>src/it/settings.xml</settingsFile>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
							<debug>true</debug>
						</configuration>
						<executions>
							<execution>
								<id>basic packaging tests</id>
								<goals>
									<goal>install</goal>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<!-- Make First Execution a Clean of target Directory -->
									<cloneClean>true</cloneClean>
									<pomIncludes>
										<pomInclude>basic-module-package-test/pom.xml</pomInclude>
										<pomInclude>war-package-copy-test/pom.xml</pomInclude>
									</pomIncludes>
									<goals>
										<goal>clean</goal>
										<goal>install</goal>
									</goals>
								</configuration>
							</execution>
							<execution>
								<id>inplace expansion tests</id>
								<goals>
									<goal>install</goal>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<pomIncludes>
										<pomInclude>inplace-module-copy-test/pom.xml</pomInclude>
									</pomIncludes>
									<goals>
										<goal>pico-module:clean</goal>
										<goal>pico-module:inplace</goal>
									</goals>
								</configuration>
							</execution>
							<execution>
								<id>inplace clean test</id>
								<goals>
									<goal>install</goal>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<pomIncludes>
										<pomInclude>inplace-module-clean-test/pom.xml</pomInclude>
									</pomIncludes>
									<goals>
										<goal>pico-module:inplace</goal>
										<goal>pico-module:clean</goal>
									</goals>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>${pom.basedir}/VerifyIntegrationTests.groovy</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
